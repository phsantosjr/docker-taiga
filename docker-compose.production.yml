version: '3'

volumes:
  postgres_data: {}
  postgres_backup: {}
  taiga_backend_media: {}

services:
  postgresql:
    restart: always
    container_name: taiga-db
    env_file:
      - production.env
    image: postgres:11-alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./data/db_backup:/backups
    networks:
      - default

  redis:
    image: redis:4.0-alpine
    container_name: taiga-redis
    restart: always
    networks:
      - default

  rabbitmq:
    restart: always
    env_file:
      - production.env
    image: rabbitmq:3.6-alpine
    container_name: taiga-rabbit
    hostname: taiga_rabbitmq
    networks:
      - default

  back:
    build: backend/
    container_name: taiga-back
    restart: always
    env_file: production.env
    volumes:
      - taiga_backend_media:/taiga_backend/media
      - ./conf/back:/taiga-conf
    environment:
      - DJANGO_DEBUG=False
    command: ['gunicorn', '--worker-class', 'gevent', '--workers', '4', '-b', '0.0.0.0:8000', 'taiga.wsgi']
    user: taiga
    entrypoint: ['/scripts/entrypoint.sh']
    networks:
      - default

  front:
    build: frontend/
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - postgresql
      - back
      - events
    volumes:
      - taiga_backend_media:/taiga_backend/media
      - /taiga_backend/static-root
      - /taiga_frontend
    restart: always
    container_name: taiga-front
    env_file:
      - production.env
    environment:
      - TAIGA_DEBUG=false
    networks:
      - default

  celeryworker:
    build: backend/
    restart: always
    entrypoint: []
    env_file: production.env
    container_name: taiga-celery-worker
    command: ['celery', '-A', 'taiga', 'worker', '-P', 'gevent', '-c', '4', '--loglevel', 'info']
    depends_on:
      - redis
      - rabbitmq
    networks:
      - default
    # Maybe you want to increase the workers, see <celeryworker> in docker-compose.yml
    # command: ['celery', '-A', 'taiga', 'worker', '-P', 'gevent', '-c', '4', '--loglevel', 'info']

  events:
    image: dockertaiga/events
    container_name: taiga-events
    restart: unless-stopped
    depends_on:
      - rabbitmq
    networks:
      - default
    env_file:
      - production.env

#  proxy:
#    image: dockertaiga/proxy
#    container_name: taiga-proxy
#    restart: unless-stopped
#    depends_on:
#      - back
#      - front
#      - events
#    networks:
#      - default
#    ports:
#      - 80:80
#      - 443:443
#    volumes:
#      #- ./cert:/taiga-cert
#      - ./conf/proxy:/taiga-conf
#    env_file:
#      - production.env

networks:
  default: